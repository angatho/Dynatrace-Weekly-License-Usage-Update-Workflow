metadata:
  version: "1"
  dependencies:
    apps:
      - id: dynatrace.automations
        version: ^1.1216.0
      - id: dynatrace.email
        version: ^1.1.1
  inputs: []
workflow:
  title: Weekly License Utilisation Updates
  tasks:
    send_license_usage:
      name: send_license_usage
      description: Send email
      action: dynatrace.email:send-email
      input:
        cc: []
        to: []
        bcc: []
        taskId: "{{ task().id }}"
        content: |-
          Your current license utilisation is at:

          {{result("collect_license_usage").used}}/{{result("collect_license_usage").total}} {{result("collect_license_usage").currencyCode}}
        subject: Weekly license consumption update
        executionId: "{{ execution().id }}"
        environmentUrl: "{{ environment().url }}"
      position:
        x: 0
        y: 2
      predecessors:
        - collect_license_usage
      conditions:
        states:
          collect_license_usage: OK
    collect_license_usage:
      name: collect_license_usage
      description: Build a custom task running js Code
      action: dynatrace.automations:run-javascript
      input:
        script: >-
          // optional import of sdk modules

          import { execution } from '@dynatrace-sdk/automation-utils';


          export default async function ({ executionId }) {

            //To use the account management API you will require a bearer token
            //This requires the use of the OAuth client you can find a link on how to get
            //The required variables below here
            //https://docs.dynatrace.com/docs/manage/identity-access-management/access-tokens-and-oauth-clients/oauth-clients

            let client_id = "insert client id here";
            let client_secret = "insert client secret here";
            let account_uuid = "insert account uuid here"

            //The revelant subscription id is also required to find the usage
            //We can find a list of all the subscriptions here and you will need to choose which one you want to use
            //https://docs.dynatrace.com/docs/discover-dynatrace/references/dynatrace-api/account-management-api/dynatrace-platform-subscription-api/subscriptions/get-all

            let subscription_uuid = "insert subscription uuid here"
            
            // Getting the access token 
            async function get_token() {
              const myHeaders = new Headers();
              myHeaders.append("Content-Type", "application/x-www-form-urlencoded");

              const urlencoded = new URLSearchParams();
              urlencoded.append("grant_type", "client_credentials");
              urlencoded.append("client_id", client_id);
              urlencoded.append("client_secret", client_secret);
              urlencoded.append("scope", "account-uac-read");
              urlencoded.append("resource", "urn:dtaccount:" + account_uuid);

              const requestOptions = {
              method: "POST",
              headers: myHeaders,
              body: urlencoded,
              redirect: "follow"
              };

              let result = []
              try {
              const response = await fetch("https://sso.dynatrace.com/sso/oauth2/token", requestOptions);
              result = await response.text();
              console.log(result)
              } catch (error) {
              console.error(error);
              };

              let jsonResult = JSON.parse(result);
              let token = jsonResult.access_token;
              
              return get_subscription_usage(token);
            }

            //Getting the subscription usage
            async function get_subscription_usage(token) {
              const myHeaders = new Headers();
              myHeaders.append("accept", "application/json");
              myHeaders.append("Authorization", "Bearer " + token);

              const requestOptions = {
              method: "GET",
              headers: myHeaders,
              redirect: "follow"
              };

              let result = []
              try {
              const response = await fetch("https://api.dynatrace.com/sub/v2/accounts/" + account_uuid + "/subscriptions/" + subscription_uuid, requestOptions);
              result = await response.text();
              console.log(result)
              } catch (error) {
              console.error(error);
              };

              let jsonResult = JSON.parse(result);
              let budget = jsonResult.budget;
              console.log(budget);

              return budget;
            }

             
            const ex = await execution(executionId);
            console.log('Automated script execution on behalf of', ex.trigger);

            return get_token();
          }
      position:
        x: 0
        y: 1
      predecessors: []
  description: ""
  trigger:
    schedule:
      rule: 
      trigger:
        type: time
        time: 09:00
      timezone: Australia/Sydney
      isActive: true
      isFaulty: false
      nextExecution: 2025-01-26T22:00:00.000Z
      filterParameters:
        earliestStart: 2025-01-21
      inputs: {}
  schemaVersion: 3
  type: STANDARD
